Vagrant.configure("2") do |config|

	# Ansible Nodes
    AnsibleCount = 1
    (1..AnsibleCount).each do |i|
        config.vm.define "k8s-ansible-#{i}" do |ansible|
            ansible.vm.box = "gutehall/ubuntu24-10"
            ansible.vm.box_version = "2024.10.11"
            ansible.vm.hostname = "k8s-ansible-#{i}"
			ansible.vm.network :private_network, ip: "192.168.180.128"

            ansible.vm.provider :vmware_workstation do |vb|
                vb.gui = true
				vb.memory = 4096
				vb.cpus = 2
				vb.vmx["displayname"] = "k8s-ansible-#{i}"
				vb.vmx['ethernet0.connectionType'] = 'nat'
            end
        end
    end
	
    # Master Nodes
    MasterCount = 1
    (1..MasterCount).each do |i|
        config.vm.define "k8s-master-#{i}" do |master|
            master.vm.box = "gutehall/ubuntu24-10"
            master.vm.box_version = "2024.10.11"
            master.vm.hostname = "k8s-master-#{i}"
			master.vm.network :private_network, ip: "192.168.180.#{i+128}"

            master.vm.provider :vmware_workstation do |vb|
                vb.gui = true
				vb.memory = 4096
				vb.cpus = 2
				vb.vmx["displayname"] = "k8s-master-#{i}"
				vb.vmx['ethernet0.connectionType'] = 'nat'
            end
        end
    end
	

    # Worker Nodes
    WorkerCount = 3
    (1..WorkerCount).each do |i|
        config.vm.define "k8s-worker-#{i}" do |worker|
            worker.vm.box = "gutehall/ubuntu24-10"
            worker.vm.box_version = "2024.10.11"
            worker.vm.hostname = "k8s-worker-#{i}"
			worker.vm.network :private_network, ip: "192.168.180.#{i+MasterCount+128}"
            worker.vm.provider :vmware_workstation do |vb|
                vb.gui = true
				vb.memory = 4096
				vb.cpus = 2
				vb.vmx["displayname"] = "k8s-worker-#{i}"
				vb.vmx['ethernet0.connectionType'] = 'nat'
            end
        end
    end

    config.vm.provision "shell" do |s|
        s.inline = <<-SHELL
            echo 'vagrant ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
			sed -i 's/^PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
        SHELL
    end

end
